{"version":3,"sources":["components/Login/Login.jsx","components/SignUp/SignUp.jsx","components/Forgot/Forgot.jsx","App.js","serviceWorker.js","index.js"],"names":["LoginPage","document","title","react_default","a","createElement","Card_default","className","Form_default","style","width","Group","controlId","Control","type","placeholder","Button_default","variant","Container","Row","padding-top","Col","xs","md","react_router_dom","to","React","Component","SignUpPage","ForgotPage","App","basename","react_router","exact","path","component","withRouter","Login","SignUp","Forgot","Boolean","window","location","hostname","match","ReactDOM","render","rel","href","integrity","crossorigin","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.842b3b9b.chunk.js","sourcesContent":["import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form'\nimport Card from 'react-bootstrap/Card'\nimport { Container, Col, Row } from 'react-bootstrap/'\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport \"./Login.css\"\n\nexport default class LoginPage extends React.Component {\n    componentDidMount(){\n        document.title = \"Login\"\n      }\n\n    render() {\n        return (\n            <Card className=\"Login\">\n                <Form style={{width: \"75%\"}}>\n                    <Form.Group controlId=\"formGroupEmail\">\n                        <Form.Control type=\"email\" placeholder=\"Username\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"formGroupPassword\">\n                        <Form.Control type=\"password\" placeholder=\"Password\" />\n                    </Form.Group>\n                </Form>\n                <Button variant=\"primary\" className=\"Button\">\n                    Login\n                </Button>\n                <Container>\n          <Row style={{\"padding-top\": \"50px\"}}>\n            <Col xs={12} md={4}>\n              <Link to=\"/signup\" className=\"Links\">Sign up</Link>\n            </Col>\n            <Col xs={0} md ={4}>  </Col>\n            <Col xs={12} md={4}>\n              <Link to=\"/forgot\" className=\"Links\">Forgot</Link>\n            </Col>\n          </Row>\n        </Container>\n            </Card>\n        )\n    }\n}","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form'\nimport Card from 'react-bootstrap/Card'\nimport { Container, Col, Row } from 'react-bootstrap/'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport \"./SignUp.css\"\n\nexport default class SignUpPage extends React.Component {\n  componentDidMount(){\n    document.title = \"Sign Up\"\n  }\n\n  render() {\n    return (\n      <Card className=\"SignUp\" >\n        <Form style={{width: \"75%\"}}>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Control type=\"username\" placeholder=\"Username\" />\n          </Form.Group>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Control type=\"email\" placeholder=\"Email\" />\n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Control type=\"password\" placeholder=\"Password\" />\n          </Form.Group>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Control type=\"email\" placeholder=\"Referal Code\" />\n          </Form.Group>\n        </Form>\n        <Button variant=\"primary\">\n          SignUp\n        </Button>\n        <Container>\n          <Row>\n            <Col xs={12} md={4}>\n              <Link to=\"/login\" className=\"Links\">Login</Link>\n            </Col>\n            <Col xs={0} md ={4}>  </Col>\n            <Col xs={12} md={4}>\n              <Link to=\"/forgot\" className=\"Links\">Forgot</Link>\n            </Col>\n          </Row>\n        </Container>\n\n      </Card>\n    )\n  }\n}","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form'\nimport Card from 'react-bootstrap/Card'\nimport { Container, Col, Row } from 'react-bootstrap/'\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n\nimport \"./Forgot.css\"\n\nexport default class ForgotPage extends React.Component {\n  componentDidMount(){\n    document.title = \"Forgot Password\"\n  }\n\n  render() {\n    return (\n      <Card className=\"Forgot\">\n        <Form style={{width: \"75%\"}}>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Control type=\"email\" placeholder=\"Email\" />\n          </Form.Group>\n\n        </Form>\n        <Button variant=\"primary\" className=\"Button\">\n          Reset Password\n        </Button>\n        <Container>\n          <Row>\n            <Col xs={12} md={4}>\n              <Link to=\"/login\"  className=\"Links\">Login</Link>\n            </Col>\n            <Col xs={0} md ={4}>  </Col>\n            <Col xs={12} md={4}>\n              <Link to=\"/signup\" className=\"Links\">Sign Up</Link>\n            </Col>\n          </Row>\n        </Container>\n      </Card>\n    )\n  }\n}","import React from 'react';\nimport './App.css';\n\nimport Login from './components/Login/Login'\nimport SignUp from './components/SignUp/SignUp'\nimport Forgot from './components/Forgot/Forgot'\n\nimport {withRouter} from 'react-router';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename=\"/dashboard\" >\n        <Route exact path=\"/\" component={withRouter(Login)} />\n        <Route path=\"/Login\" component={withRouter(Login)} />\n        <Route path=\"/SignUp\" component={withRouter(SignUp)} />\n        <Route path=\"/Forgot\" component={withRouter(Forgot)} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from \"react-router-dom\"\n\nReactDOM.render(\n    <BrowserRouter>\n        <link\n            rel=\"stylesheet\"\n            href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n            integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n            crossorigin=\"anonymous\"\n        />\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}